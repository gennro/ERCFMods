[gcode_macro MMU_CUT_TIP]
description: Cut filament by pressing the cutter on a fixed pin with a horizontal movement.

# Distance to retract prior to making the cut, this reduces wasted filament but might cause clog 
# if set too large and/or if there are gaps in the hotend assembly 
# This must be less than the distance from the nozzle to the cutter.
variable_retract_length: 25
# Used to push back the filament to prevent a clog, should be less than retract length to prevent oozing.
variable_push_back_length: 20
# Moves the filament back up around the cutter.
variable_cut_retract_length: 25

# The location of the pin, this should be the position of the toolhead when the cutter 
# just lightly touches the pin
variable_pin_loc_x: 13.54
variable_pin_loc_y: 250

# The starting and end positions when making the cut
# In particular, instead of making the cut by traveling to the pin location above, 
# we leave a small safety margin along X-axis to avoid scratching on the pin when traveling
# This should also give a small distance to produce some momentum when pressing on the pin 
variable_pin_park_x_dist: 5.0

# Position of the toolhead when the cutter is fully compressed
# Should leave a small headroom to avoid banging the toolhead or gantry
variable_pin_loc_x_compressed: 5

# Speed related settings
# Note that if the cut speed is too fast, the steppers can lose steps
# Therefore, for a cut: 
# - We first make a fast move to accumulate some momentum and get the cut blade to the initial contact with the filament
# - We then make a slow move for the actual cut to happen 
variable_travel_spd: 400
variable_extruder_speed: 30
variable_cut_fast_move_spd: 50
variable_cut_slow_move_spd: 25
variable_evacuate_speed: 400
variable_cut_dwell_time: 100 # time to dwell at the cut point in ms
variable_cut_fast_move_fraction: 0.5 # fraction of the move that uses fast move 

# Safety margin for fast vs slow travel
# When traveling to the pin location, we make a safer but longer move if we closer to the pin than this specified margin
# Usually setting these to the size of the toolhead (plus a small margin) should be good enough 
variable_safe_margin_x: 30
variable_safe_margin_y: 30


gcode:
    {% set RETRACT_LENGTH = params.RETRACT_LENGTH | default(printer['gcode_macro CUT_FILAMENT']['retract_length']) | float %}
    {% set pin_park_x_loc = pin_loc_x + pin_park_x_dist %}
    {% set pin_park_y_loc = pin_loc_y %}
    {% set fast_slow_transition_loc = (pin_loc_x_compressed - pin_park_x_loc) * cut_fast_move_fraction + pin_park_x_loc | float %}
    {% set current_loc_x = printer.gcode_move.gcode_position.x %}
    {% set current_loc_y = printer.gcode_move.gcode_position.y %}

    SAVE_GCODE_STATE NAME=cut_filament_state
    
    {% if ("x" not in printer.toolhead.homed_axes) or ("y" not in printer.toolhead.homed_axes) %}
        G28 X Y
    {% endif %}

    G90

    {% if RETRACT_LENGTH > 0 %}
      G92 E0
      G1 E-{RETRACT_LENGTH} F{extruder_speed*60} # retract to save filament waste
      G92 E0
    {% endif %}

    # Move to cutter
    {% if ((printer.gcode_move.gcode_position.x - pin_park_x_loc) | abs < safe_margin_x) or ((printer.gcode_move.gcode_position.y - pin_park_y_loc | float) | abs < safe_margin_y) %}
      # Make a safe but slower travel move
      G1 X{pin_park_x_loc + safe_margin_x} F{travel_spd*60}
      G1 Y{pin_park_y_loc} F{travel_spd*60}
      G1 X{pin_park_x_loc} F{travel_spd*60}
    {% else %}
      G1 X{pin_park_x_loc} Y{pin_park_y_loc} F{travel_spd*60}
    {% endif %}

    # Make the cut
    G1 X{fast_slow_transition_loc} F{cut_fast_move_spd*60} # make a fast move to initiate contact of the blade with the filament
    G1 X{pin_loc_x_compressed} F{cut_slow_move_spd*60} # do the cut in slow move
    G4 P{cut_dwell_time}
    G1 X{pin_park_x_loc} F{evacuate_speed*60} # evacuate
  
    {% if RETRACT_LENGTH > 0 %}
      G92 E0
      G1 E{push_back_length} F{extruder_speed*60} #Pushes filament tip back down so it doesn't get stuck
      G92 E0
      G1 E-{cut_retract_length} F{extruder_speed*60} #moves filament back to cutter
      G92 E0
    {% endif %}
   
    #M400 # ensures all commands are finished before restoring gcode state.
    M117 Filament cut!
    RESTORE_GCODE_STATE NAME=cut_filament_state MOVE=1 MOVE_SPEED={travel_spd} 